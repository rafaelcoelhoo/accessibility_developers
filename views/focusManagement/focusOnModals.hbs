<section class="focus-management modal-focus-content">
    <div id="controls">
        <a href="#" class="d-block">Link 1</a>
        <button class="modal-toggle mt-4 btn-yellow d-block">Open modal</button>
        <button class="modal-toggle-2 mt-4 btn-yellow">Open modal inert</button>
        <a href="#" class="d-block mt-4">Link 2</a>

    </div>
    </section>
<script>

    const modal = (id, triggerElement, closeElement, inert) => {
        // Will hold previously focused element
        let focusedElementBeforeModal;

        // Find the modal and its overlay
        let closeModalButton = document.getElementById(closeElement);
        const modal = document.querySelector(id);
        let modalOverlay = document.querySelector('.modal-overlay');

        let modalToggle = document.querySelector(triggerElement);
        if (modalToggle) modalToggle.addEventListener('click', openModal);

        function openModal() {
            // Save current focus
            focusedElementBeforeModal = document.activeElement;

            if (inert) {
                document.querySelector('header').inert = true;
                document.querySelector('main').inert = true;
                document.querySelector('footer').inert = true;
            }

            // Listen for and trap the keyboard
            modal.addEventListener('keydown', trapTabKey);

            // Listen for indicators to close the modal
            // uncomment
            modalOverlay.addEventListener('click', closeModal);
            closeModalButton.addEventListener('click', closeModal);


            // Sign-Up button
            let signUpBtn = modal.querySelector('.signup');
            if (signUpBtn) signUpBtn.addEventListener('click', closeModal);

            // Find all focusable children
            let focusableElementsString = 'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
            let focusableElements = modal.querySelectorAll(focusableElementsString);
            // Convert NodeList to Array
            focusableElements = Array.prototype.slice.call(focusableElements);

            let firstTabStop = focusableElements[0];
            let lastTabStop = focusableElements[focusableElements.length - 1];

            // Show the modal and overlay
            modal.style.display = 'block';
            modalOverlay.style.display = 'block';

            // Focus first child
            modal.focus();

            function trapTabKey(e) {
                if (!inert) {
                    // Check for TAB key press
                    if (e.keyCode === 9) {

                        // SHIFT + TAB
                        if (e.shiftKey) {
                            if (document.activeElement === firstTabStop) {
                                e.preventDefault();
                                lastTabStop.focus();
                            }

                            // TAB
                        } else {
                            if (document.activeElement === lastTabStop) {
                                e.preventDefault();
                                firstTabStop.focus();
                            }
                        }
                    }
                }

                // ESCAPE
                if (e.keyCode === 27) {
                    closeModal();
                }
            }
        }

        function closeModal() {
            // Hide the modal and overlay
            modal.style.display = 'none';
            modalOverlay.style.display = 'none';
            if (inert) {
                document.querySelector('main').inert = false;
                document.querySelector('footer').inert = false;
            }

            // Set focus back to element that had it before the modal was opened
            focusedElementBeforeModal.focus();
        }

    }
    document.addEventListener('DOMContentLoaded', () => {
        modal('.modal-1', '.modal-toggle', 'close-modal', false);
        // alterar o inert para true para teste
        modal('.modal-2', '.modal-toggle-2', 'close-modal-2', true);
    });

</script>
